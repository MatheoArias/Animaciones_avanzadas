/*Agregar variables a los colores solo tendríamos que utilizar el color en inglés*/
:root{
    --yellow:#ffd602;
    --red:#d5040a;
    --blue:#036cb6;
    --white:#ffffff;
}

*{
    font-family: 'Lato', sans;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html{
    font-size: 62.5%;
}

body {
    height:100vh;
    width: 100vw;
    /*Con overflow:hidden hacemos que no sobresalga ningún elemento del constenedor boddy*/
    overflow:hidden; 
}

.page {
    /*Sería el elemento <div> que continen el loader, main and modal*/
    position: relative;
    height: 100vh;
    width: 100%;
}

/* Diseñando el loader */
.loader {
    /*Establezco el color de fondo*/
    background-color:var(--white);
    /*Establezco el alto  y el ancho del fondo del 100% del contenedor*/
    height: 100%;
    width: 100%;
    /*Pongo display flex, Horizontal y verticalmente en el centro*/
    display: flex;
    justify-content: center;/*Horizontalmente ||*/
    align-items: center;/* Verticalmente --*/
    position: absolute;/*Establezo el elemento <section> perteneciente a la clase loader como posición absoluta*/
    /*Su posición relativa es el .page*/
    z-index: 3;/*Este sería el elemento más lejano de la pantalla */
    animation: loader 3s linear forwards;
}

/*El va a variar entre el 0% y 95%*/
/*Donde los dos primeros estados va estar visible y el último será hidden que lo desaparece*/
@keyframes loader {
    0%{
        opacity: 1;
        visibility: visible;
    }
    
    95%{
        opacity: 1;
        visibility: visible;
    }
    
    100%{
        opacity: 0;
        visibility: hidden;
    }
}

.loader div {
    /*Estas seían ls bolitas que tenemos en el css*/
    background-color: var(--yellow);
    width: 40px;
    height: 40px;
    border-radius: 50%;
    margin: 20px; 
    transform: scale(0);
    animation: scaling 1.5s ease-in-out infinite;
}

.loader div:nth-child(1){
    /*Retrasa el comienzo a 0.4 segundos*/
    animation-delay: 0.5s;
}

.loader div:nth-child(2){
    /*Retrasa el comienzo a 0.6 segundos*/
    animation-delay: 0.6s;
}

.loader div:nth-child(3){
    /*Retrasa el comienzo a 0.6 segundos*/
    animation-delay: 0.3s;
}

@keyframes scaling {
    0%, 100%{
        transform: scale(1.3);
    }
    50%{
        transform: scale(.8);
    }
}

.container{
    z-index:1;
    position: absolute;
    display: grid;
    grid-template-columns: 55% 45%;
    grid-template-rows: 20% 50% 30%;
    grid-template-areas:"nav  aside"
                        "section aside"
                        "footer aside";
    height: 100%;
    width: 100%;

}

.navbar{
    background-color: var(--yellow);
    grid-area: nav;
}

.navbar__content {
    display: flex;
    align-items: center;
    width: 100%;
    height: 100%;
    padding: 0  8rem 0 8rem;
    animation: 3s navbar 1s ease-in-out;
    /*retraso - Nombre - duración - aceleración */
    /*Recordar que el tiempo de retraso debe de estar coordinado con tiempo de finalización del loader*/
}

@keyframes navbar{
    0%{
        transform: translateY(-200px);
    };
    100%{
        transform: translateY(0px);
    }
}

.navbar__content img {
    width: 5rem;
}

.navbar__content ul {
    display: flex;
    justify-content: space-evenly;
    list-style: none;
    width: 45rem;
}

.navbar__content ul li a {
    text-decoration: none;
    font-family: 'Lato', sans;
    font-size: 1.3rem;
    font-weight: 700;
    color: var(--red);
}

.main-content {
    grid-area: section;
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin: 8rem;
    animation: 3s main-content 1s ease-in-out;
}

.main-content p:first-child{
    font-size: 3.6rem;
    font-weight: 300;
    color: var(--red);
    margin: 0 0 0 4.4rem;
}

.main-content h1{
    font-size: 4.8rem;
    font-weight: 700;
    display: flex;
    flex-direction: column;
}

.main-content p:last-child{
    font-size: 1.6rem;
    font-weight: 300;
    width: 80%;
}

@keyframes main-content{
    0%{
        transform: translateY(-600px);
    };
    100%{
        transform: translateY(0px);
    }
}

.side-content{
    grid-area: aside;
    display: grid;
    align-items: center;
    grid-template-columns: repeat(6,1fr);
    grid-template-rows: 100%;
}

.side-content p{
    grid-column: 1/2;
    transform: rotate(-90deg);
    font-size: 3rem;
    font-weight: 700;
    animation: 3.5s side-content-text 2s ease-in-out forwards;
    opacity: 0;
}

@keyframes side-content-text{
    0%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    };
}

.side-content img{
    grid-column: 2/6;
    grid-row: 1/2;
    z-index: 2;
    width: 100%;
    height: 90%;
    animation: 3s side-content-img 1s ease-in-out forwards;
}

@keyframes side-content-img{
    0%{
        transform: translateY(500px);
    }
    100%{
        transform: translateX(0px);
    };
}

.side-content div{
    grid-column: 4/7;
    grid-row: 1/2;
    width: 100%;
    height: 100%;
    background-color: var(--yellow);
}

.fotter{
    grid-area: footer;
    display: flex;
    align-items: flex-end;
    justify-content: space-around;
    background-color: var(--yellow);
    border-radius: 0 50px 0 0;
    animation: 4s footer 0.6s ease-in-out forwards;
    transform: translateY(200px);
}

@keyframes footer{
    0%{
        transform: translateY(200px);
    }
    100%{
        transform: translateX(0px);
    };
}

/*Teniendo en cuenta que la trasnformación sera ir a -50px, entonces debería agregarle una transition*/
/*Al regresar el tiempo debe de ser mas lento, por este motivo se pone mas largo y se regresa al estado inicial, para que de la sensación de que está descansando */

.fotter div{
    display: flex;
    justify-content: center;
    background-color: #036cb6;
    width: 10rem;
    height: 90%;
    border-radius: 50px 50px 0 0;
    margin: 0.5rem  auto 0 auto;

}

.fotter div img{
    width: 16rem;
    height: 90%;
    transform: translateY(0px) scale(1.0);
    transition: transform 0.5s ease-in-out;
}

.fotter div:hover img{
    cursor: pointer;
    transform: translateY(-50px)  scale(1.3);
    transition: transform 0.3s ease-in-out;
}

.hidden{
    display: none !important;
}

.visible{
    display: visible !important;
}

.modal{
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    background-color: rgb(0,0,0,0.5);
    z-index: 4;
}

.modal__content{
    width: 50%;
    height: 70%;
    background-color: #ffffff;
    display: grid;
    place-items: center;

}

.modal__content #buttonModal{
    align-self: start;
    justify-self: end;
    margin: 1rem 1rem 0 0;
    padding: 1rem;
    background-color: var(--red);
    color: var(--white);
    border: none;

}

.modal__content button{
    margin: 1rem 1rem 0 0;
    padding: 1rem;
    background-color: var(--red);
    color: var(--white);
    border: none;

}

.modal__content--slider{
    width: 200px;
    height: 180px;
    transform-style: preserve-3d;
    margin: 1rem;
}

.cards{
    /*La posición relativa es la clase modal */
    position: relative;
    width: 100%;
    height: 100%;
}

.card{
    background-color: var(--yellow);
    position: absolute;
    left: 0;
    right: 0;
    margin: 0 auto;
    transition:  transform 0.5s ease-in-out;
    cursor: pointer;
    display: grid;
    place-items: center;
    width: 50%;
    height: 100%;
}

#radio-1:checked ~ .cards #card-1,
#radio-2:checked ~ .cards #card-2,
#radio-3:checked ~ .cards #card-3{
    transform : translateX(0) scale(1);
    opacity: 1;
    z-index:1
}

#radio-1:checked ~ .cards #card-2,
#radio-2:checked ~ .cards #card-3,
#radio-3:checked ~ .cards #card-1{
    transform : translateX(40%) scale(0.8);
    opacity: 0.5;
    z-index:0
}

#radio-1:checked ~ .cards #card-3,
#radio-2:checked ~ .cards #card-1,
#radio-3:checked ~ .cards #card-2{
    transform : translateX(-40%) scale(0.8);
    opacity: 0.5;
    z-index:0
}

.card img{
    width: 15rem;
    height: 15rem;
}